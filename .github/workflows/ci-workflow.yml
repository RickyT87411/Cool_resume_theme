name: CI workflow

on:
  push:
    branches: [ feature/github-actions ]
    # branches: [ master, develop ]
  # pull_request:
  #   branches: [ master, develop ]

jobs:
  build-test:
    name: Build and Test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Ruby
    # To automatically get bug fixes and new Ruby versions for ruby/setup-ruby,
    # change this to (see https://github.com/ruby/setup-ruby#versioning):
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: 2.6
    - uses: actions/cache@v2
      with:
        path: vendor/bundle
        key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-gems-
    - name: Install dependencies
      run: |
        bundle config path vendor/bundle
        bundle install --jobs 4 --retry 3
    - name: Built test site
      run: bundle exec jekyll build --config _test/_config-version-2.yml --destination ./_test-site-2
    - name: Run tests
      run: bundle exec htmlproofer ./_test-site-2 --disable-external

  bump-version:
    name: Bump Version
    runs-on: ubuntu-latest
    needs: build-test
    if: github.ref == 'refs/heads/feature/github-actions'
    outputs:
      CURRENT_VERSION: ${{ steps.vars.outputs.CURRENT_VERSION }}
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Set up Ruby
    # To automatically get bug fixes and new Ruby versions for ruby/setup-ruby,
    # change this to (see https://github.com/ruby/setup-ruby#versioning):
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: 2.6
    - name: Install gem-release
      run: gem install gem-release
    - name: Set git config
      run: |
        git config user.name github-actions
        git config user.email github-actions@github.com
    - name: Initialize workflow variables
      id: vars
      run: |
        CURRENT_VERSION=$(gem bump --pretend --no-commit | awk '{ print $3 }')
        echo ::set-output name=CURRENT_VERSION::${CURRENT_VERSION}
        unset HAS_TAG
        if [ -n "$(git tag -l v$CURRENT_VERSION)" ]; then HAS_TAG='true'; fi
        echo ::set-output name=HAS_TAG::${HAS_TAG}
    - name: Bump version if not manually bumped
      if: steps.vars.outputs.HAS_TAG
      run: |
        gem bump --skip-ci
        NEW_VERSION=$(gem bump --pretend --no-commit | awk '{ print $3 }')
        sed -i -e "s/modern-resume-theme (${{ steps.vars.outputs.CURRENT_VERSION }})/modern-resume-theme (${NEW_VERSION})/g" ./Gemfile.lock
        git add Gemfile.lock
        git commit --amend --no-edit
    - name: Tag latest version
      run: gem tag --no-push
    - run: git push origin HEAD:${{ github.ref }} --tags

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: bump-version
    if: github.ref == 'refs/heads/feature/github-actions'
    steps:
    - uses: actions/checkout@v2
    - name: Set up Ruby
    # To automatically get bug fixes and new Ruby versions for ruby/setup-ruby,
    # change this to (see https://github.com/ruby/setup-ruby#versioning):
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: 2.6
    - uses: actions/cache@v2
      with:
        path: vendor/bundle
        key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-gems-
    - name: Install dependencies
      run: |
        bundle config path vendor/bundle
        bundle install --jobs 4 --retry 3
    - name: Install gem-release
      run: gem install gem-release
    - name: test
      run: |
        CURRENT_VERSION=$(gem bump --pretend --no-commit | awk '{ print $3 }')
        echo $CURRENT_VERSION
        echo ${{ needs.bump-version.outputs.CURRENT_VERSION }}
    # - name: Build Gem
    #   run: gem build modern-resume-theme.gemspec
